package net.ko.persistence.annotation;

import static java.lang.annotation.ElementType.FIELD;
import static java.lang.annotation.ElementType.METHOD;
import static java.lang.annotation.RetentionPolicy.RUNTIME;

import java.lang.annotation.Retention;
import java.lang.annotation.Target;

/**
 * The Column annotation is used to specify a mapped column for a persistent
 * property or field.
 */
@Target({ METHOD, FIELD })
@Retention(RUNTIME)
public @interface Column {
	public final int defaultLength = 255;
	public final int defaultValue = 0;

	/**
	 * (Optional) The name of the column.
	 */
	String name() default "";

	/**
	 * (Optional) Whether the property is a unique key. This is a shortcut for
	 * the UniqueConstraint annotation at the table level and is useful for when
	 * the unique key constraint is only a single field. This constraint applies
	 * in addition to any constraint entailed by primary key mapping and to
	 * constraints specified at the table level.
	 */
	boolean unique() default false;

	/**
	 * (Optional) Whether the database column is nullable.
	 */
	boolean nullable() default true;

	/**
	 * (Optional) Whether the column is included in SQL INSERT statements
	 * generated by the persistence provider.
	 */
	boolean insertable() default true;

	/**
	 * (Optional) Whether the column is included in SQL UPDATE statements
	 * generated by the persistence provider.
	 */
	boolean updatable() default true;

	/**
	 * (Optional) The SQL fragment that is used when generating the DDL for the
	 * column.
	 */
	String columnDefinition() default "";

	/**
	 * (Optional) The name of the table that contains the column. If absent the
	 * column is assumed to be in the primary table.
	 */
	String table() default "";

	/**
	 * (Optional) The column length. (Applies only if a string-valued column is
	 * used.)
	 */
	int length() default defaultLength;

	/**
	 * (Optional) The precision for a decimal (exact numeric) column. (Applies
	 * only if a decimal column is used.)
	 */
	int precision() default defaultValue;

	/**
	 * (Optional) The scale for a decimal (exact numeric) column. (Applies only
	 * if a decimal column is used.)
	 */
	int scale() default defaultValue;

}